//General parameters for nextflow execution:
process.executor = "slurm"
//SLURM general submission options:
executor {
   queueSize = 300
   submitRateLimit = '100/5min'
}

//Input parameters for the pipeline:
//Directory for final outputs:
params.batch_name = "HGDP_part2_50indivs"
params.output_prefix = "/gpfs/gibbs/pi/tucci/pfr8/Friedlaender/FullDepthBatches"
params.output_dir = "${params.output_prefix}/${params.batch_name}_fastq_to_gvcf"
params.read_glob = "${params.output_dir}/raw_data/*_R{1,2}.fastq.gz"
//Option for inane ENA/SRA read name format fixing:
//To my utter amazement, the HGDP ENA FASTQs have read header formats that
// are unusable by Picard MarkDuplicates, as the lane+tile+x+y coordinate
// information is all after a space, so kseq.h treats it as part of the
// comment, not the name, hence the SAM QNAME will only have the spot ID...
//So we add a flag that tells the nextflow script to sed 's/ /:/g' them.
params.fix_ena_readname = "1"

//Debugging options:
trace {
   enabled = true
   fields = 'task_id,name,hash,status,exit,cpus,memory,time,submit,start,complete,duration,%cpu,%mem,peak_rss,workdir'
   file = "${params.output_dir}/${params.batch_name}_fastq_to_gvcf_nextflow_trace.txt"
   raw = true
   overwrite = true
}

//The first capture group in the following regex must be a unique identifier
// for the library and sequencing run:
params.idfcidlaneid_regex = ~/^(\p{Alnum}+_\d+)_R[12]$/
//I'm setting up file names such that they follow this scheme:
//[sample ID]_[lane ID]_R[read end].fastq.gz
//^^^^^^^^^^^^^^^^^^^^^
//  Capture this part
//Furthermore, to separate out the sample ID I need another regex:
params.id_regex = ~/^(\p{Alnum}+)_\d+$/
//Character to use as delimiter for mates of a pair in the read name:
//(used by AdapterRemoval)
//Illumina CASAVA 1.8+ should be " "
//Older Illumina should be "/", and SRA/ENA sometimes are "/" too
params.mate_sep = "/"
//Regex for optical duplicate coordinate parsing:
//Leave blank for the default faster parsing meant for Illumina CASAVA 1.8+
//For HGDP read headers, use "[0-9A-Za-z]+[.][0-9]+:[0-9A-Za-z_]*[:]?[0-9]+:([0-9]+):([0-9]+):([0-9]+)"
params.optdup_regex = "[0-9A-Za-z]+[.][0-9]+:[0-9A-Za-z_]*[:]?[0-9]+:([0-9]+):([0-9]+):([0-9]+)"

//Reference-related parameters for the pipeline:
profiles {
   hs37d5 {
      params.ref_prefix = "/gpfs/gibbs/pi/tucci/pfr8/refs"
      params.ref = "${params.ref_prefix}/1kGP/hs37d5/hs37d5.fa"
      //File of file names for scattering interval BED files for MD, IR, and BQSR:
      params.scatteredBAM_bed_fofn = "${params.ref_prefix}/1kGP/hs37d5/scatter_intervals/hs37d5_thresh_200Mbp_allscafs_scattered_BEDs.fofn"
      //File of file names for scattering interval BED files for HC:
      params.scatteredHC_bed_fofn = "${params.ref_prefix}/1kGP/hs37d5/scatter_intervals/hs37d5_thresh_100Mbp_noEBV_nodecoy_scattered_BEDs.fofn"
      //Databases of SNPs and INDELs for IR, BQSR, and VQSR:
      params.tgp_indels = "${params.ref_prefix}/Broad/b37/1000G_phase1.indels.b37.vcf"
      params.mills_indels = "${params.ref_prefix}/Broad/b37/Mills_and_1000G_gold_standard.indels.b37.vcf"
      params.dbsnp = "${params.ref_prefix}/Broad/b37/dbsnp_138.b37.vcf"
      params.tgp_snps = "${params.ref_prefix}/Broad/b37/1000G_phase1.snps.high_confidence.b37.vcf"
      //Yleaf:
      params.yleafpos = '/home/pfr8/bin/Yleaf/Position_files/WGS_hs37d5.txt'
   }

   farnam {
      params.mod_fastqc = "FastQC/0.11.9-Java-1.8"
      params.mod_adapterremoval = "AdapterRemoval/5e6f885"
      params.mod_bwa = "bwa/0.7.17-r1198"
      params.mod_samtools = "samtools/1.10-96-gcc4e1a6"
      params.mod_mutserve = "mutserve/2.0.0-rc12"
      params.mod_haplogrep = "haplogrep/2.4.0"
      params.mod_yleaf = "Yleaf/7c33ca0"
      params.mod_picard = "picard/2.24.0"
      params.mod_gatk3 = "GATK/3.8-1-0-gf15c1c3ef-Java-1.8"
      params.mod_gatk4 = "GATK/4.1.8.1-Java-1.8"
      params.mod_R = "R/3.6.1-foss-2018b"
      params.rcrs = '/home/pfr8/bin/mutserve/2.0.0-rc12/rCRS.fasta'
   }

   ruddle {
      params.mod_fastqc = "FastQC/0.11.9-Java-1.8"
      params.mod_adapterremoval = "AdapterRemoval/5bb3b65"
      params.mod_bwa = "bwa/13b5637"
      params.mod_samtools = "samtools/af811a6"
      params.mod_mutserve = "mutserve/2.0.0-rc12"
      params.mod_haplogrep = "haplogrep/2.4.0"
      params.mod_yleaf = "Yleaf/7c33ca0"
      params.mod_picard = "picard/2.24.0"
      params.mod_gatk3 = "GATK/3.8-1-0-gf15c1c3ef-Java-1.8"
      params.mod_gatk4 = "GATK/4.1.8.1-Java-1.8"
      params.mod_R = "R/3.6.1-foss-2018b"
      params.rcrs = '/home/pfr8/bin/mutserve/2.0.0-rc12/rCRS.fasta'
   }
}

//SLURM submission parameters:
//Memory specified in GiB unless otherwise indicated
//FastQC:
//Memory in MiB
//Adds 256 MiB for overhead automatically
params.fastqc_cpus = 1
params.fastqc_mem = 256
params.fastqc_timeout = '6h'
//Adapter trimming and mapping:
//Adds 1 GiB for overhead automatically
//Retries adding 16 GiB if needed
params.mapping_cpus = 20
params.mapping_mem = 64
params.mapping_timeout = '24h'
//Merging:
//Memory in MiB
//Adds 256 MiB for overhead automatically
params.merging_cpus = 20
params.merging_mem = 256
params.merging_timeout = '24h'
//mtDNA haplogroup:
//Memory in MiB
//Adds 256 MiB for overhead automatically
params.mtdna_cpus = 1
params.mtdna_mem = 256
params.mtdna_timeout = '1h'
//Y haplogroup:
//Adds 1 GiB for overhead automatically
//Retries adding 4 GiB if needed
params.y_cpus = 1
params.y_mem = 8
params.y_timeout = '1h'
//Genetic sex determination:
//Memory in MiB
//Adds 256 MiB for overhead automatically
params.sex_cpus = 1
params.sex_mem = 768
params.sex_timeout = '12h'
//Markdup, IndelRealigner, and BQSR (sharded):
//Adds 1 GiB for overhead automatically
//Retries adding 16 GiB if needed
params.mdirbqsr_cpus = 1
params.mdirbqsr_mem = 29
params.mdirbqsr_timeout = '24h'
//ApplyBQSR:
//Adds 1 GiB for overhead automatically
params.bqsr_cpus = 20
params.bqsr_mem = 16
params.bqsr_timeout = '24h'
//Picard metrics:
//Adds 1 GiB for overhead automatically
params.metrics_cpus = 1
params.metrics_mem = 20
params.metrics_timeout = '24h'
//HaplotypeCaller:
//Adds 1 GiB for overhead automatically
//Retries adding 8 GiB if needed
params.hc_cpus = 4
params.hc_mem = 16
params.hc_timeout = '12h'
//MergeGvcfs:
//Adds 1 GiB for overhead automatically
//Retries adding 4 GiB if needed
params.gvcf_merge_cpus = 1
params.gvcf_merge_mem = 8
params.gvcf_merge_timeout = '12h'
//ValidateVariants:
//Adds 1 GiB for overhead automatically
params.gvcf_check_cpus = 1
params.gvcf_check_mem = 1
params.gvcf_check_timeout = '12h'

//Fixed parameters for the pipeline:
//PL (Platform) tag for the RG header:
params.PL = "ILLUMINA"
//Pixel distance between optical duplicates for Picard MarkDuplicates:
params.optdupdist = 2500
